# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user root;
worker_processes auto;
pid /run/nginx.pid;

# Allow many connections and access to files.
worker_rlimit_nofile 65535;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    #worker_connections ;
    worker_connections %%WORKER_CONNECTIONS%%;
}

http {

    log_format POSTDATA escape=json '{'
                                    '"rid":"$request_id",'
                                    '"date":"$time_iso8601",'
                                    '"ip":"$http_x_forwarded_for",'
                                    '"uri":"$request_uri",'
                                    '"ua":"$http_user_agent",'
                                    '"method":"$request_method",'
                                    '"appId":"$arg_appId",'
                                    '"platform":"$arg_platform",'
                                    '"compression":"$arg_compression",'
                                    '"data":"$request_body"'
                                '}';

    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;
    server_tokens       off;
    proxy_method        POST;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen       8088;
        server_name  _;

        include /etc/nginx/default.d/*.conf;
      
        error_page 500 501 502 503 504 505 /error;

        location %%SERVER_ENDPOINT_PATH%% {
            access_log /var/log/nginx/postdata-%%TASK_ID%%.log POSTDATA;
            proxy_pass http://127.0.0.1:8088/logdata;  
        }

        location = /logdata {
            access_log off;
            add_header Content-Type text/plain;
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            add_header 'rid' $request_id;
            return 200;       
        }

        location = /error {
            access_log /var/log/nginx/error-postdata-%%TASK_ID%%.log POSTDATA;
            return 503 "503 Service Temporarily Unavailable";
        }

        location = /health {
            access_log off;
            error_log off;
            return 200 '{"ok": true}';
        }
    }
}

